// Code generated by goctl. DO NOT EDIT.
// Source: limit.proto

package limit

import (
	"context"

	"codeflow/workspace/demo/grpc-limit-demo/proto"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	PingReq  = proto.PingReq
	PingResp = proto.PingResp

	Limit interface {
		Ping(ctx context.Context, in *PingReq, opts ...grpc.CallOption) (*PingResp, error)
	}

	defaultLimit struct {
		cli zrpc.Client
	}
)

func NewLimit(cli zrpc.Client) Limit {
	return &defaultLimit{
		cli: cli,
	}
}

func (m *defaultLimit) Ping(ctx context.Context, in *PingReq, opts ...grpc.CallOption) (*PingResp, error) {
	client := proto.NewLimitClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
